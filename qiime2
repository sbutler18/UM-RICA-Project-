{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#making the directory \n",
    "mkdir ./DemultiplexedSeqs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing the data\n",
    "qiime tools import \\\n",
    "  --type 'SampleData[PairedEndSequencesWithQuality]' \\\n",
    "  --input-path Fastq \\\n",
    "  --input-format CasavaOneEightSingleLanePerSampleDirFmt \\\n",
    "  --output-path ./DemultiplexedSeqs/demux-paired-end.qza"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime demux summarize \\\n",
    "  --i-data ./DemultiplexedSeqs/demux-paired-end.qza \\\n",
    "  --o-visualization ./DemultiplexedSeqs/demux-paired-end.qzv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime tools view ./DemultiplexedSeqs/demux-paired-end.qzv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#running cutadapt \n",
    "qiime cutadapt trim-paired \\\n",
    "  --i-demultiplexed-sequences ./DemultiplexedSeqs/demux-paired-end.qza \\\n",
    "  --p-front-f GTGYCAGCMGCCGCGGTAA \\\n",
    "  --p-front-r GGACTACNVGGGTWTCTAAT \\\n",
    "  --o-trimmed-sequences ./DemultiplexedSeqs/demux-paired-end-trimmed.qza"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime demux summarize \\\n",
    "  --i-data ./DemultiplexedSeqs/demux-paired-end-trimmed.qza  \\\n",
    "  --o-visualization ./DemultiplexedSeqs/demux-paired-end-trimmed.qzv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "mkdir ./DADA2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#running dada2 \n",
    "qiime dada2 denoise-paired \\\n",
    "  --i-demultiplexed-seqs ./DemultiplexedSeqs/demux-paired-end-trimmed.qza \\\n",
    "  --p-trim-left-f 0 \\\n",
    "  --p-trunc-len-f 240 \\\n",
    "  --p-trim-left-r 0 \\\n",
    "  --p-trunc-len-r 180 \\\n",
    "  --o-representative-sequences ./DADA2/rep-seqs-dada2.qza \\\n",
    "  --o-table ./DADA2/table-dada2.qza \\\n",
    "  --o-denoising-stats ./DADA2/stats-dada2.qza"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#making the directory for the merged files \n",
    "mkdir Merged"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "cd Merged"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#merging the table\n",
    "qiime feature-table merge \\\n",
    "  --i-tables ../DADA2/table-dada2.qza \\\n",
    "  --o-merged-table merged-table.qza"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#merging the representative sequences \n",
    "qiime feature-table merge-seqs \\\n",
    "  --i-data ../DADA2/rep-seqs-dada2.qza \\\n",
    "  --o-merged-data merged-rep-seqs.qza"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#summarization for 3\n",
    "qiime feature-table summarize \\\n",
    "  --i-table merged-table.qza \\\n",
    "  --o-visualization merged-table.qzv \\\n",
    "  --m-sample-metadata-file sample-metadata.tsv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime tools view merged-table.qzv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime feature-table tabulate-seqs \\\n",
    "\t--i-data merged-rep-seqs.qza \\\n",
    "\t--o-visualization merged-rep-seqs.qzv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Vsearch Step \n",
    "qiime vsearch cluster-features-de-novo \\\n",
    "  --i-sequences ./merged-rep-seqs.qza \\\n",
    "  --i-table ./merged-table.qza \\\n",
    "  --p-perc-identity 1 \\\n",
    "  --o-clustered-table clustered-table.qza \\\n",
    "  --o-clustered-sequences clustered-seqs.qza"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime feature-table summarize \\\n",
    "  --i-table clustered-table.qza \\\n",
    "  --o-visualization clustered-table.qzv \\\n",
    "  --m-sample-metadata-file sample-metadata.tsv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime tools view clustered-table.qzv\n",
    "\n",
    "qiime feature-table tabulate-seqs \\\n",
    "\t--i-data clustered-seqs.qza \\\n",
    "\t--o-visualization clustered-rep-seqs.qzv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "conda deactivate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#had to download the new qiime2 for the classification step (2024.2)\n",
    "conda activate qiime2-amplicon-2024.2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Assigning taxonmy for the merged data\n",
    "qiime feature-classifier classify-sklearn \\\n",
    ">   --i-classifier classifier_GSR-DB_V3-V4.qza \\\n",
    ">   --i-reads merged-rep-seqs.qza \\\n",
    ">   --o-classification taxonomy.qza\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Assigning taxonmy with the merged and clustered data, did not do this step but the step above instead\n",
    "qiime feature-classifier classify-sklearn \\\n",
    "  --i-classifier classifier_GSR-DB_V3-V4.qza \\\n",
    "  --i-reads clustered-rep-seqs.qza \\\n",
    "  --o-classification taxonomy1.qza"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime metadata tabulate \\\n",
    ">   --m-input-file taxonomy.qza \\\n",
    ">   --o-visualization taxonomy.qzv\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime tools view taxonomy.qzv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime tools export \\\n",
    "\t--input-path merged-rep-seqs.qza \\\n",
    "\t--output-path table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime tools export \\\n",
    "\t--input-path taxonomy.qza \\\n",
    "\t--output-path taxonomy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "qiime tools export \\\n",
    "\t--input-path merged-table.qza \\\n",
    "\t--output-path feature"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#convert feature table from biom to txt \n",
    "biom  convert \\\n",
    "-i feature/feature-table.biom \\\n",
    "--to-tsv \\\n",
    "-o feature/feature-table.txt\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
